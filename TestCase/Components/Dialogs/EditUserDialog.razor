@using Microsoft.AspNetCore.Components
@using MudBlazor
@using TestCase.Entities
@using TestCase.Services

@inject UserService UserService
@inject ISnackbar Snackbar

<MudDialog>
    <DialogContent>
        <MudForm @ref="form" Model="@user">
            <MudTextField Label="工号" @bind-Value="user.EmployeeId" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mb-3" Required="true" />
            <MudTextField Label="姓名" @bind-Value="user.Name" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mb-3" Required="true" />
            <MudTextField Label="邮箱" @bind-Value="user.Email" Variant="Variant.Outlined" Margin="Margin.Dense" Class="mb-3" Required="true" InputType="InputType.Email" />
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">取消</MudButton>
        <MudButton Color="Color.Primary" OnClick="Save" Variant="Variant.Filled">保存</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] 
    public IMudDialogInstance MudDialog { get; set; } = default!;

    [Parameter] 
    public User User { get; set; } = new();

    [Parameter] 
    public bool IsEditMode { get; set; } = false;

    private MudForm form = null!;
    private User user = new();
    private string originalEmployeeId = string.Empty;

    protected override void OnInitialized()
    {
        user = new User
        {
            Id = User.Id,
            EmployeeId = User.EmployeeId,
            Name = User.Name,
            Email = User.Email
        };
        
        originalEmployeeId = User.EmployeeId;
    }

    private async Task Save()
    {
        await form.Validate();

        if (string.IsNullOrWhiteSpace(user.EmployeeId))
        {
            Snackbar.Add("工号不能为空", Severity.Error);
            return;
        }

        if (string.IsNullOrWhiteSpace(user.Name))
        {
            Snackbar.Add("姓名不能为空", Severity.Error);
            return;
        }

        if (string.IsNullOrWhiteSpace(user.Email))
        {
            Snackbar.Add("邮箱不能为空", Severity.Error);
            return;
        }

        // 检查工号是否重复（在添加模式下或工号被修改时）
        if (!IsEditMode || user.EmployeeId != originalEmployeeId)
        {
            var existingUser = UserService.GetUserByEmployeeId(user.EmployeeId);
            if (existingUser != null)
            {
                Snackbar.Add("工号已存在，请使用其他工号", Severity.Error);
                return;
            }
        }

        try
        {
            if (IsEditMode)
            {
                var existingUser = UserService.GetUserById(user.Id);
                if (existingUser != null)
                {
                    existingUser.EmployeeId = user.EmployeeId;
                    existingUser.Name = user.Name;
                    existingUser.Email = user.Email;
                    UserService.UpdateUser(existingUser);
                    Snackbar.Add("用户更新成功", Severity.Success);
                }
            }
            else
            {
                var newUser = new User
                {
                    EmployeeId = user.EmployeeId,
                    Name = user.Name,
                    Email = user.Email
                };
                UserService.CreateUser(newUser);
                Snackbar.Add("用户创建成功", Severity.Success);
            }

            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (Exception ex)
        {
            Snackbar.Add($"操作失败: {ex.Message}", Severity.Error);
        }
    }

    private void Cancel()
    {
        MudDialog.Cancel();
    }
}